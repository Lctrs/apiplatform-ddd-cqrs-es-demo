<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Book\Domain\Model\Review\Command;

final class PostReview extends \Prooph\Common\Messaging\Command
{
    use \Prooph\Common\Messaging\PayloadTrait;

    public const MESSAGE_NAME = 'Book\Domain\Model\Review\Command\PostReview';

    protected $messageName = self::MESSAGE_NAME;

    public function id(): \Book\Domain\Model\Review\ReviewId
    {
        return \Book\Domain\Model\Review\ReviewId::fromString($this->payload['id']);
    }

    public function bookId(): \Book\Domain\Model\Book\BookId
    {
        return \Book\Domain\Model\Book\BookId::fromString($this->payload['bookId']);
    }

    public function body(): ?\Book\Domain\Model\Review\Body
    {
        return isset($this->payload['body']) ? \Book\Domain\Model\Review\Body::fromString($this->payload['body']) : null;
    }

    public function rating(): \Book\Domain\Model\Review\Rating
    {
        return \Book\Domain\Model\Review\Rating::fromScalar($this->payload['rating']);
    }

    public function author(): ?\Book\Domain\Model\Review\Author
    {
        return isset($this->payload['author']) ? \Book\Domain\Model\Review\Author::fromString($this->payload['author']) : null;
    }

    public static function with(\Book\Domain\Model\Review\ReviewId $id, \Book\Domain\Model\Book\BookId $bookId, ?\Book\Domain\Model\Review\Body $body, \Book\Domain\Model\Review\Rating $rating, ?\Book\Domain\Model\Review\Author $author): self
    {
        return new self([
            'id' => $id->toString(),
            'bookId' => $bookId->toString(),
            'body' => null === $body ? null : $body->toString(),
            'rating' => $rating->toScalar(),
            'author' => null === $author ? null : $author->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['id']) || !\is_string($payload['id'])) {
            throw new \InvalidArgumentException("Key 'id' is missing in payload or is not a string");
        }

        if (!isset($payload['bookId']) || !\is_string($payload['bookId'])) {
            throw new \InvalidArgumentException("Key 'bookId' is missing in payload or is not a string");
        }

        if (isset($payload['body']) && !\is_string($payload['body'])) {
            throw new \InvalidArgumentException("Value for 'body' is not a string in payload");
        }

        if (!isset($payload['rating']) || !\is_int($payload['rating'])) {
            throw new \InvalidArgumentException("Key 'rating' is missing in payload or is not a int");
        }

        if (isset($payload['author']) && !\is_string($payload['author'])) {
            throw new \InvalidArgumentException("Value for 'author' is not a string in payload");
        }

        $this->payload = $payload;
    }
}
