<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Book\Domain\Model\Book\Event;

final class BookWasCreated extends \Prooph\EventSourcing\AggregateChanged
{
    public const MESSAGE_NAME = 'Book\Domain\Model\Book\Event\BookWasCreated';

    protected $messageName = self::MESSAGE_NAME;

    protected $payload = [];

    private $id;
    private $isbn;
    private $title;
    private $description;
    private $author;

    public function id(): \Book\Domain\Model\Book\BookId
    {
        if (null === $this->id) {
            $this->id = \Book\Domain\Model\Book\BookId::fromString($this->aggregateId());
        }

        return $this->id;
    }

    public function isbn(): \Book\Domain\Model\Book\Isbn
    {
        if (null === $this->isbn) {
            $this->isbn = \Book\Domain\Model\Book\Isbn::fromString($this->payload['isbn']);
        }

        return $this->isbn;
    }

    public function title(): \Book\Domain\Model\Book\Title
    {
        if (null === $this->title) {
            $this->title = \Book\Domain\Model\Book\Title::fromString($this->payload['title']);
        }

        return $this->title;
    }

    public function description(): \Book\Domain\Model\Book\Description
    {
        if (null === $this->description) {
            $this->description = \Book\Domain\Model\Book\Description::fromString($this->payload['description']);
        }

        return $this->description;
    }

    public function author(): \Book\Domain\Model\Book\Author
    {
        if (null === $this->author) {
            $this->author = \Book\Domain\Model\Book\Author::fromString($this->payload['author']);
        }

        return $this->author;
    }

    public static function with(\Book\Domain\Model\Book\BookId $id, \Book\Domain\Model\Book\Isbn $isbn, \Book\Domain\Model\Book\Title $title, \Book\Domain\Model\Book\Description $description, \Book\Domain\Model\Book\Author $author): self
    {
        return new self($id->toString(), [
            'isbn' => $isbn->toString(),
            'title' => $title->toString(),
            'description' => $description->toString(),
            'author' => $author->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['isbn']) || !\is_string($payload['isbn'])) {
            throw new \InvalidArgumentException("Key 'isbn' is missing in payload or is not a string");
        }

        if (!isset($payload['title']) || !\is_string($payload['title'])) {
            throw new \InvalidArgumentException("Key 'title' is missing in payload or is not a string");
        }

        if (!isset($payload['description']) || !\is_string($payload['description'])) {
            throw new \InvalidArgumentException("Key 'description' is missing in payload or is not a string");
        }

        if (!isset($payload['author']) || !\is_string($payload['author'])) {
            throw new \InvalidArgumentException("Key 'author' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
