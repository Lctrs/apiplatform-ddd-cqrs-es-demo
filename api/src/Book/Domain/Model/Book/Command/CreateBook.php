<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Book\Domain\Model\Book\Command;

final class CreateBook extends \Prooph\Common\Messaging\Command
{
    use \Prooph\Common\Messaging\PayloadTrait;

    public const MESSAGE_NAME = 'Book\Domain\Model\Book\Command\CreateBook';

    protected $messageName = self::MESSAGE_NAME;

    public function id(): \Book\Domain\Model\Book\BookId
    {
        return \Book\Domain\Model\Book\BookId::fromString($this->payload['id']);
    }

    public function isbn(): \Book\Domain\Model\Book\Isbn
    {
        return \Book\Domain\Model\Book\Isbn::fromString($this->payload['isbn']);
    }

    public function title(): \Book\Domain\Model\Book\Title
    {
        return \Book\Domain\Model\Book\Title::fromString($this->payload['title']);
    }

    public function description(): \Book\Domain\Model\Book\Description
    {
        return \Book\Domain\Model\Book\Description::fromString($this->payload['description']);
    }

    public function author(): \Book\Domain\Model\Book\Author
    {
        return \Book\Domain\Model\Book\Author::fromString($this->payload['author']);
    }

    public static function with(\Book\Domain\Model\Book\BookId $id, \Book\Domain\Model\Book\Isbn $isbn, \Book\Domain\Model\Book\Title $title, \Book\Domain\Model\Book\Description $description, \Book\Domain\Model\Book\Author $author): self
    {
        return new self([
            'id' => $id->toString(),
            'isbn' => $isbn->toString(),
            'title' => $title->toString(),
            'description' => $description->toString(),
            'author' => $author->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['id']) || !\is_string($payload['id'])) {
            throw new \InvalidArgumentException("Key 'id' is missing in payload or is not a string");
        }

        if (!isset($payload['isbn']) || !\is_string($payload['isbn'])) {
            throw new \InvalidArgumentException("Key 'isbn' is missing in payload or is not a string");
        }

        if (!isset($payload['title']) || !\is_string($payload['title'])) {
            throw new \InvalidArgumentException("Key 'title' is missing in payload or is not a string");
        }

        if (!isset($payload['description']) || !\is_string($payload['description'])) {
            throw new \InvalidArgumentException("Key 'description' is missing in payload or is not a string");
        }

        if (!isset($payload['author']) || !\is_string($payload['author'])) {
            throw new \InvalidArgumentException("Key 'author' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
