prooph_event_store:
    stores:
        book_store:
            event_store: Prooph\EventStore\EventStore
    projection_managers:
        book_projection_manager:
            event_store: Prooph\EventStore\EventStore
            connection: PDO
            projections:
                book_projection:
                    read_model: App\Book\Infrastructure\Projection\Doctrine\Orm\BookReadModel
                    projection: App\Book\Infrastructure\Projection\BookProjection
                review_projection:
                    read_model: App\Book\Infrastructure\Projection\Doctrine\Orm\ReviewReadModel
                    projection: App\Book\Infrastructure\Projection\ReviewProjection

services:
    _defaults:
        public: false

    PDO:
        class: PDO
        factory: ['@database_connection', getWrappedConnection]

    Prooph\EventStore\TransactionalEventStore:
        class: Prooph\EventStore\Pdo\PostgresEventStore
        arguments:
            - '@prooph_event_store.message_factory'
            - '@PDO'
            - !service
              class: Prooph\EventStore\Pdo\PersistenceStrategy\PostgresAggregateStreamStrategy
    Prooph\EventStore\EventStore:
        alias: Prooph\EventStore\TransactionalEventStore
        public: true
            
    Prooph\EventSourcing\Aggregate\AggregateTranslator:
        class: Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator

    prooph_event_store.message_factory:
        class: App\Core\Infrastructure\Persistence\Prooph\ProophMessageFactory
