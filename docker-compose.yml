version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/lctrs/nginx}
      - ${PHP_IMAGE:-quay.io/lctrs/php}
      - ${PROJECTION_IMAGE:-quay.io/lctrs/projection}

services:
  php:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/lctrs/php}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
      - event-store
    environment:
      - EVENT_STORE_URL=http://event-store:2113
    volumes:
      - ./api:/srv/api:z,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini
      # If you don't develop on Linux, comment the following line to not use a bind-mounted host directory instead
      - ./api/var:/srv/api/var:z

  api:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/lctrs/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro

  vulcain:
    image: dunglas/vulcain
    environment:
      - CERT_FILE=/certs/localhost.crt
      - KEY_FILE=/certs/localhost.key
      - UPSTREAM=http://api
    depends_on:
      - api
      - dev-tls
    volumes:
      - dev-certs:/certs:ro
    ports:
      - target: 443
        published: 8443
        protocol: tcp

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db-data:/var/lib/postgresql/data:z
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:z
    ports:
      - target: 5432
        published: 5432
        protocol: tcp

  event-store:
    image: eventstore/eventstore:release-5.0.5
    ports:
      - target: 1113
        published: 1113
        protocol: tcp
      - target: 2113
        published: 2113
        protocol: tcp

  client:
    build:
      context: ./client
      target: api_platform_client_development
      cache_from:
        - ${CLIENT_IMAGE:-quay.io/lctrs/client}
    image: ${CLIENT_IMAGE:-quay.io/lctrs/client}
    environment:
      - API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT=http://api
      - API_PLATFORM_CLIENT_GENERATOR_OUTPUT=src
    depends_on:
      - dev-tls
    volumes:
      - ./client:/usr/src/client:z,cached
      - dev-certs:/usr/src/client/node_modules/webpack-dev-server/ssl:ro
    ports:
      - target: 3000
        published: 443
        protocol: tcp

  admin:
    build:
      context: ./admin
      target: api_platform_admin_development
      cache_from:
        - ${ADMIN_IMAGE:-quay.io/lctrs/admin}
    image: ${ADMIN_IMAGE:-quay.io/lctrs/admin}
    depends_on:
      - dev-tls
    volumes:
      - ./admin:/usr/src/admin:z,cached
      - dev-certs:/usr/src/admin/node_modules/webpack-dev-server/ssl:ro
    ports:
      - target: 3000
        published: 444
        protocol: tcp

  dev-tls:
    build:
      context: ./docker/dev-tls
    volumes:
      - dev-certs:/certs:z
    ports:
      - target: 80
        published: 80
        protocol: tcp

  projection_book:
    build:
      context: ./api
      target: api_platform_projection
      <<: *api-cache-from
    image: ${PROJECTION_IMAGE:-quay.io/lctrs/projection}
    depends_on:
      - db
      - event-store
    environment:
      - EVENT_STORE_URL=http://event-store:2113
      - EVENT_STORE_CREDENTIALS=admin:changeit
      - STREAM=$$ce-book
      - GROUP_NAME=doctrine-read-model
    volumes:
      - ./api:/srv/api:z,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini
      # If you don't develop on Linux, comment the following line to not use a bind-mounted host directory instead
      - ./api/var:/srv/api/var:z
    entrypoint: docker-entrypoint
    command: bin/console app:run-projections -vvv

  projection_review:
    build:
      context: ./api
      target: api_platform_projection
      <<: *api-cache-from
    image: ${PROJECTION_IMAGE:-quay.io/lctrs/projection}
    depends_on:
      - db
      - event-store
    environment:
      - EVENT_STORE_URL=http://event-store:2113
      - EVENT_STORE_CREDENTIALS=admin:changeit
      - STREAM=$$ce-review
      - GROUP_NAME=doctrine-read-model
    volumes:
      - ./api:/srv/api:z,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini
      # If you don't develop on Linux, comment the following line to not use a bind-mounted host directory instead
      - ./api/var:/srv/api/var:z
    entrypoint: docker-entrypoint
    command: bin/console app:run-projections -vvv

volumes:
  db-data: {}
  dev-certs: {}
